/*
 * Copyright 2017 Abed Tony BenBrahim <tony.benrahim@10xdev.com>
 *     and Gwt-JElement project contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
[
    GenericParameter(T)
] callback interface ObjectPropertyGetterFunction{
    [GenericSub(T)] any getValue();
 };

 [
     GenericParameter(T)
 ] callback interface ObjectPropertySetterFunction{
    void setValue([GenericSub(T)] any value);
 };

[
    GenericParameter(T)
] dictionary ObjectPropertyDescriptor{
    required boolean configurable;
    required boolean enumerable;
    [GenericSub(T)] any value;
    boolean writable;
    [GenericParameter(T)] ObjectPropertyGetterFunction get;
    [GenericParameter(T)] ObjectPropertySetterFunction set;
};

[
    Constructor(optional object value),
    JsTypeName(Object),
    GenericParameter(T)
] interface JsObject {
    static JsObject assign(JsObject target, JsObject... sources);
    static JsObject create(JsObject proto, optional JsObject propertiesObject);
    [GenericReturn] JsObject defineProperties([GenericSub(T)] JsObject obj, [GenericParameter(ObjectPropertyDescriptor)] JsObject properties);
    [GenericReturn] static JsObject defineProperty([GenericSub(T)] JsObject obj, String propertyName, [GenericParameter(?)]ObjectPropertyDescriptor descriptor);
    static sequence<sequence<any>> entries(JsObject obj);
    [GenericReturn] static JsObject freeze([GenericSub(T)] JsObject obj);
    [GenericParameter(?)] static ObjectPropertyDescriptor getOwnPropertyDescriptor(JsObject obj, String propertyName);
    [GenericParameter(ObjectPropertyDescriptor<?>)] static JsObject getOwnPropertyDescriptors(JsObject obj);
    static sequence<String> getOwnPropertyNames(JsObject obj);
    static sequence<Object> getOwnPropertySymbols(JsObject obj);
    static JsObject getPrototypeOf(JsObject obj);
    static boolean is(Object value1, Object value2);
    static boolean isExtensible(JsObject obj);
    static boolean isFrozen(JsObject obj);
    static boolean isSealed(JsObject obj);
    static String[] keys(JsObject obj);
    static JsObject preventExtensions(JsObject obj);
    [GenericReturn] static JsObject seal([GenericSub(T)] JsObject seal);
    static JsObject setPrototypeOf(JsObject obj, Object proto);
    [GenericSub(T)] static sequence<any> values([GenericParameter(T)] JsObject obj);

    static attribute int length;
    static attribute JsObject prototype;

    attribute JsObject __proto__;
    attribute Function constructor;

    void __defineGetter__(String propertyName, ObjectPropertyGetterFunction func);
    void __defineSetter__(String propertyName, ObjectPropertySetterFunction func);
    [GenericParameter(?)] ObjectPropertyGetterFunction __lookupGetter__(String propertyName);
    [GenericParameter(?)] ObjectPropertySetterFunction __lookupSetter__(String propertyName);
    boolean hasOwnProperty(String propertyName);
    boolean isPrototypeOf(JsObject obj);
    boolean propertyIsEnumerable(String propertyName);
    String toLocaleString(optional (String or sequence<String>) locales, optional LocaleOptions options);
    String toSource();
    any valueOf();

    //Function attributes and methods to break the cyclic inheritance
    static attribute String name;
    static attribute Function caller;
    static any apply(object thisArg, optional sequence<any> arguments);
    static any call(object thisArg, any... arguments);

    // Special operations
    stringifier;

 };


